# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:

    acl:
        connection: default
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        fos_userbundle:
            id: fos_user.user_provider.username

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        demo_login:
            pattern:  ^/demo/secured/login$
            security: false

        # secures part of the application
        demo_secured_area:
            pattern:    ^/demo/secured/
            # it's important to notice that in this case _demo_security_check and _demo_login
            # are route names and that they are specified in the AcmeDemoBundle
            form_login:
                check_path: _demo_security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        # FOSUser
#        main:
#            pattern: ^/
#            form_login:
#                provider: fos_userbundle
#                csrf_provider: form.csrf_provider
#            logout:       true
#            anonymous:    true
        #HWI_OAuth
#        secured_area:
#            pattern: ^/
#            context:            user
#            anonymous: ~
#            logout:
#                path:              /logout
#            oauth:
#                resource_owners:
#                    google:        /login/check-google
#                login_path:        /admin/login (el de sonata) /login (el que tiene el enlace a google)
#                login_path:        /connect/google
#                use_forward:       false
#                failure_path:      /login

#                oauth_user_provider:
                   # service: hwi_oauth.user.provider.fosub_bridge
#                    service: my_user_provider
        # default login area for standard users

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            usuario
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
                target: /logout
            anonymous:          true

        # -> end custom configuration

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern:             .*
            context:             usuario
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            logout:             true
            logout:
                path:   /logout
                target: /
            anonymous:          true
            oauth:
                resource_owners:
                    google:        /login/check-google
#                login_path:        /admin/login (el de sonata) /login (el que tiene el enlace a google)
                login_path:        /connect/google
                check_path:        /login_check
                use_forward:       false
                failure_path:      /login
                default_target_path: /admin

                oauth_user_provider:
                   # service: hwi_oauth.user.provider.fosub_bridge
                    service: my_user_provider

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/tutores/, role: ROLE_PROFESOR }
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN, ROLE_PROFESOR] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/tutores/, role: ROLE_USER }
#         - { path: ^/tutores/admin/, role: ROLE_ADMIN }
